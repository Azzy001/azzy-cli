# workflow name
name: CLI Pipeline

# define when the workflow should be triggered
# this workflow is triggered on any push to any branch
# and on pull requests with specific events
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
    types:
      - opened
      - edited
      - reopened
      - synchronize

# permissions required for the workflow
# the workflow needs read permissions for repository contents and packages
permissions:
  contents: read
  packages: read

# define jobs to be run
jobs:
  # job to checkout the repository and set up the environment
  checkout-and-setup:
    name: "1. Checkout and Setup"
    runs-on: ubuntu-latest
    outputs:
      # output of the checkout step
      checkout-dir: ${{ steps.checkout.outputs.dir }}
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4
        with:
          # fetch all history for all branches and tags
          fetch-depth: 0

  # job to run a security scan using gitleaks
  security-scan:
    name: "2. Run Security Scan"
    # depends on the completion of the checkout-and-setup job
    needs: checkout-and-setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # fetch all history for all branches and tags
          fetch-depth: 0
      - name: Run Security Scanner
        uses: gitleaks/gitleaks-action@v2
        env:
          # token for accessing the GitHub API
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # job to generate and upload a changelog
  generate-changelog:
    name: "3. Generate Changelog"
    # depends on the completion of the security-scan job
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # fetch all history for all branches and tags
          fetch-depth: 0
      - name: Generate Changelog
        run: |
          # generate a changelog based on commit history
          git log --pretty=format:"* %h - %an, %ar : %s" > CHANGELOG.md
          # output the changelog to the log
          cat CHANGELOG.md
      - name: Upload Changelog as Artifact
        uses: actions/upload-artifact@v3
        with:
          # name of the artifact
          name: changelog
          # path to the file to be uploaded
          path: CHANGELOG.md
