# workflow name
name: CLI Pipeline

# define when the workflow should be triggered
on:
  # trigger the workflow on any push to any branch
  push:
    branches: ["*"]
  # trigger the workflow on pull requests with specific events
  pull_request:
    branches: ["*"]
    types:
      - opened
      - edited
      - reopened
      - synchronize

# permissions required for the workflow
permissions:
  # read access to the repository contents
  contents: read
  # read access to packages
  packages: read

# define jobs to be run
jobs:
  # checkout the repository and set up the environment
  checkout-and-setup:
    # name of the job
    name: "1. Checkout and Setup"
    # use the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # step to checkout the repository
      - name: Checkout Repository
      # use the checkout action version 4
        uses: actions/checkout@v4
        with:
          # fetch all history for all branches and tags
          fetch-depth: 0

  # job to run security scan using gitleaks
  security-scan:
    name: "2. Run Security Scan"
    # depend on the checkout-and-setup job
    needs: checkout-and-setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        # use the checkout action version 4
        uses: actions/checkout@v4
        with:
          # fetch all history for all branches and tags
          fetch-depth: 0

        # step to run gitleaks security scanner
      - name: Run Security Scanner
        # use the gitleaks action version 2
        uses: gitleaks/gitleaks-action@v2
        env:
          # gitHub token for accessing the repository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            # custom arguments for gitleaks
            # --redact: hide secrets in the output
            # -v: verbose mode
            # --exit-code=2: exit code 2 if leaks are found
            # --report-format=sarif: output the report in SARIF format
            # --report-path=results.sarif: path to save the SARIF report
            # --log-level=debug: log level set to debug for detailed logging
            # --log-opts="--all": scan all commits in the repository's history
            args: --redact -v --exit-code=2 --report-format=sarif --report-path=results.sarif --log-level=debug --log-opts="--all"
            
  code-lint:
    name: "3. Run Code Lint"
    needs: security-scan
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: read
        statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 1
      - name: Run Code lineter
        uses: super-linter/super-linter@v6.6.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

